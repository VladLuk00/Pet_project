plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs'
}

ext {
    dagger_version = '2.17'
    room_version = "2.3.0"
    lifecycleVersion = '2.3.1'
    nav_version = "2.3.5"
    hilt_version = '2.35'
    rx_android = "3.0.0"
    rx_java = "3.0.3"
    fragment_version = "1.3.4"
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    buildFeatures {
        dataBinding true
    }
    
    defaultConfig {
        applicationId "com.example.petproject"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner = "com.example.petproject.utils.CustomTestRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude("META-INF/*.kotlin_module")
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/ASM"
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.5.0"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //fragment
    implementation 'androidx.fragment:fragment-ktx:1.3.4'
    debugImplementation("androidx.fragment:fragment-testing:$fragment_version")

    //Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    //navigation
    implementation("androidx.hilt:hilt-navigation-fragment:1.0.0")

    //Room
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    implementation "android.arch.persistence.room:rxjava2:1.1.1"
    implementation "androidx.room:room-rxjava3:2.3.0"

    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Jetpack Compose Integration
    implementation "androidx.navigation:navigation-compose:1.0.0-alpha10"

    // Feature module Support
    implementation "androidx.navigation:navigation-dynamic-features-fragment:$nav_version"

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"
    androidTestImplementation("com.google.dagger:hilt-android-testing:2.35")
    kaptAndroidTest("androidx.hilt:hilt-compiler:1.0.0-alpha01")

    // reactive
    implementation "io.reactivex.rxjava3:rxandroid:$rx_android"
    implementation "io.reactivex.rxjava3:rxjava:$rx_java"

    //color picker
    implementation "petrov.kristiyan:colorpicker-library:1.1.10"

    //glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    //Retrofit
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation('androidx.test:runner:1.3.0')
    androidTestImplementation('androidx.test:rules:1.3.0')

    // Assertions
    androidTestImplementation('androidx.test.ext:junit:1.1.2')
    androidTestImplementation('androidx.test.ext:truth:1.3.0')
    androidTestImplementation('com.google.truth:truth:1.0.1')

    // Espresso dependencies
    testImplementation('androidx.test.espresso:espresso-core:3.3.0')
    testImplementation('androidx.test.espresso:espresso-contrib:3.3.0')
    testImplementation('androidx.test.espresso:espresso-intents:3.3.0')
    testImplementation('androidx.test.espresso:espresso-accessibility:3.3.0')
    testImplementation('androidx.test.espresso:espresso-web:3.3.0')
    testImplementation('androidx.test.espresso.idling:idling-concurrent:3.3.0')
    testImplementation('androidx.test.espresso:espresso-idling-resource:3.3.0')

    testImplementation("org.hamcrest:hamcrest-library:1.3")

    //mockito
    androidTestImplementation "org.mockito:mockito-android:3.10.0"
    androidTestImplementation('androidx.test.uiautomator:uiautomator:2.2.0')
    testImplementation "org.mockito:mockito-core:3.10.0"
    testImplementation("org.powermock:powermock-core:1.7.4")
    testImplementation("org.powermock:powermock-module-testng:1.7.4")
    testImplementation("org.powermock:powermock-api-mockito2:1.7.4")

    // Optional -- Robolectric environment
    testImplementation('androidx.test:core:1.3.0')

    testImplementation "junit:junit:4.13.2"

    androidTestImplementation "android.arch.core:core-testing:1.1.1"
    testImplementation "android.arch.core:core-testing:1.1.1"

    //test coroutines
    androidTestImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.0"

}